/* tslint:disable */
/* eslint-disable */
/**
 * server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CreateWorkspaceRequest,
  CreateWorkspaceResponse,
  ValidationProblemDetails,
} from '../models/index';
import {
    CreateWorkspaceRequestFromJSON,
    CreateWorkspaceRequestToJSON,
    CreateWorkspaceResponseFromJSON,
    CreateWorkspaceResponseToJSON,
    ValidationProblemDetailsFromJSON,
    ValidationProblemDetailsToJSON,
} from '../models/index';

export interface ApiWorkspacesPostRequest {
    createWorkspaceRequest?: CreateWorkspaceRequest;
}

/**
 * 
 */
export class WorkspacesApi extends runtime.BaseAPI {

    /**
     */
    async apiWorkspacesPostRaw(requestParameters: ApiWorkspacesPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CreateWorkspaceResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/Workspaces`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateWorkspaceRequestToJSON(requestParameters['createWorkspaceRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CreateWorkspaceResponseFromJSON(jsonValue));
    }

    /**
     */
    async apiWorkspacesPost(requestParameters: ApiWorkspacesPostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CreateWorkspaceResponse> {
        const response = await this.apiWorkspacesPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
