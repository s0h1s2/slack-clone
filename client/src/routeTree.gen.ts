/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as WorkspacesIndexImport } from './routes/workspaces/index'
import { Route as WorkspacesWorkspaceIdImport } from './routes/workspaces/$workspaceId'
import { Route as JoinWorkspaceIdImport } from './routes/join/$workspaceId'
import { Route as WorkspacesWorkspaceIdDirectMessageConversationIdImport } from './routes/workspaces/$workspaceId_.direct-message.$conversationId'
import { Route as WorkspacesWorkspaceIdChannelsChannelIdImport } from './routes/workspaces/$workspaceId_.channels.$channelId'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const WorkspacesIndexRoute = WorkspacesIndexImport.update({
  id: '/workspaces/',
  path: '/workspaces/',
  getParentRoute: () => rootRoute,
} as any)

const WorkspacesWorkspaceIdRoute = WorkspacesWorkspaceIdImport.update({
  id: '/workspaces/$workspaceId',
  path: '/workspaces/$workspaceId',
  getParentRoute: () => rootRoute,
} as any)

const JoinWorkspaceIdRoute = JoinWorkspaceIdImport.update({
  id: '/join/$workspaceId',
  path: '/join/$workspaceId',
  getParentRoute: () => rootRoute,
} as any)

const WorkspacesWorkspaceIdDirectMessageConversationIdRoute =
  WorkspacesWorkspaceIdDirectMessageConversationIdImport.update({
    id: '/workspaces/$workspaceId_/direct-message/$conversationId',
    path: '/workspaces/$workspaceId/direct-message/$conversationId',
    getParentRoute: () => rootRoute,
  } as any)

const WorkspacesWorkspaceIdChannelsChannelIdRoute =
  WorkspacesWorkspaceIdChannelsChannelIdImport.update({
    id: '/workspaces/$workspaceId_/channels/$channelId',
    path: '/workspaces/$workspaceId/channels/$channelId',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/join/$workspaceId': {
      id: '/join/$workspaceId'
      path: '/join/$workspaceId'
      fullPath: '/join/$workspaceId'
      preLoaderRoute: typeof JoinWorkspaceIdImport
      parentRoute: typeof rootRoute
    }
    '/workspaces/$workspaceId': {
      id: '/workspaces/$workspaceId'
      path: '/workspaces/$workspaceId'
      fullPath: '/workspaces/$workspaceId'
      preLoaderRoute: typeof WorkspacesWorkspaceIdImport
      parentRoute: typeof rootRoute
    }
    '/workspaces/': {
      id: '/workspaces/'
      path: '/workspaces'
      fullPath: '/workspaces'
      preLoaderRoute: typeof WorkspacesIndexImport
      parentRoute: typeof rootRoute
    }
    '/workspaces/$workspaceId_/channels/$channelId': {
      id: '/workspaces/$workspaceId_/channels/$channelId'
      path: '/workspaces/$workspaceId/channels/$channelId'
      fullPath: '/workspaces/$workspaceId/channels/$channelId'
      preLoaderRoute: typeof WorkspacesWorkspaceIdChannelsChannelIdImport
      parentRoute: typeof rootRoute
    }
    '/workspaces/$workspaceId_/direct-message/$conversationId': {
      id: '/workspaces/$workspaceId_/direct-message/$conversationId'
      path: '/workspaces/$workspaceId/direct-message/$conversationId'
      fullPath: '/workspaces/$workspaceId/direct-message/$conversationId'
      preLoaderRoute: typeof WorkspacesWorkspaceIdDirectMessageConversationIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/login': typeof LoginRoute
  '/join/$workspaceId': typeof JoinWorkspaceIdRoute
  '/workspaces/$workspaceId': typeof WorkspacesWorkspaceIdRoute
  '/workspaces': typeof WorkspacesIndexRoute
  '/workspaces/$workspaceId/channels/$channelId': typeof WorkspacesWorkspaceIdChannelsChannelIdRoute
  '/workspaces/$workspaceId/direct-message/$conversationId': typeof WorkspacesWorkspaceIdDirectMessageConversationIdRoute
}

export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/join/$workspaceId': typeof JoinWorkspaceIdRoute
  '/workspaces/$workspaceId': typeof WorkspacesWorkspaceIdRoute
  '/workspaces': typeof WorkspacesIndexRoute
  '/workspaces/$workspaceId/channels/$channelId': typeof WorkspacesWorkspaceIdChannelsChannelIdRoute
  '/workspaces/$workspaceId/direct-message/$conversationId': typeof WorkspacesWorkspaceIdDirectMessageConversationIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/login': typeof LoginRoute
  '/join/$workspaceId': typeof JoinWorkspaceIdRoute
  '/workspaces/$workspaceId': typeof WorkspacesWorkspaceIdRoute
  '/workspaces/': typeof WorkspacesIndexRoute
  '/workspaces/$workspaceId_/channels/$channelId': typeof WorkspacesWorkspaceIdChannelsChannelIdRoute
  '/workspaces/$workspaceId_/direct-message/$conversationId': typeof WorkspacesWorkspaceIdDirectMessageConversationIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/login'
    | '/join/$workspaceId'
    | '/workspaces/$workspaceId'
    | '/workspaces'
    | '/workspaces/$workspaceId/channels/$channelId'
    | '/workspaces/$workspaceId/direct-message/$conversationId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/join/$workspaceId'
    | '/workspaces/$workspaceId'
    | '/workspaces'
    | '/workspaces/$workspaceId/channels/$channelId'
    | '/workspaces/$workspaceId/direct-message/$conversationId'
  id:
    | '__root__'
    | '/login'
    | '/join/$workspaceId'
    | '/workspaces/$workspaceId'
    | '/workspaces/'
    | '/workspaces/$workspaceId_/channels/$channelId'
    | '/workspaces/$workspaceId_/direct-message/$conversationId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LoginRoute: typeof LoginRoute
  JoinWorkspaceIdRoute: typeof JoinWorkspaceIdRoute
  WorkspacesWorkspaceIdRoute: typeof WorkspacesWorkspaceIdRoute
  WorkspacesIndexRoute: typeof WorkspacesIndexRoute
  WorkspacesWorkspaceIdChannelsChannelIdRoute: typeof WorkspacesWorkspaceIdChannelsChannelIdRoute
  WorkspacesWorkspaceIdDirectMessageConversationIdRoute: typeof WorkspacesWorkspaceIdDirectMessageConversationIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  LoginRoute: LoginRoute,
  JoinWorkspaceIdRoute: JoinWorkspaceIdRoute,
  WorkspacesWorkspaceIdRoute: WorkspacesWorkspaceIdRoute,
  WorkspacesIndexRoute: WorkspacesIndexRoute,
  WorkspacesWorkspaceIdChannelsChannelIdRoute:
    WorkspacesWorkspaceIdChannelsChannelIdRoute,
  WorkspacesWorkspaceIdDirectMessageConversationIdRoute:
    WorkspacesWorkspaceIdDirectMessageConversationIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/login",
        "/join/$workspaceId",
        "/workspaces/$workspaceId",
        "/workspaces/",
        "/workspaces/$workspaceId_/channels/$channelId",
        "/workspaces/$workspaceId_/direct-message/$conversationId"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/join/$workspaceId": {
      "filePath": "join/$workspaceId.tsx"
    },
    "/workspaces/$workspaceId": {
      "filePath": "workspaces/$workspaceId.tsx"
    },
    "/workspaces/": {
      "filePath": "workspaces/index.tsx"
    },
    "/workspaces/$workspaceId_/channels/$channelId": {
      "filePath": "workspaces/$workspaceId_.channels.$channelId.tsx"
    },
    "/workspaces/$workspaceId_/direct-message/$conversationId": {
      "filePath": "workspaces/$workspaceId_.direct-message.$conversationId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
